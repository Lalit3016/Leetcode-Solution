class MinStack {
public:
    MinStack() {
        
        stack<long > s;
      long mini = LONG_MAX;
        
    }
       stack<long > s;
       long mini = LONG_MAX;
    
    void push(long val) {
        
        if(s.empty())
        {
            s.push(val);
            mini=val;
        }
        else{
            
            if(val<mini)
            {
                s.push((long)2*val-mini);
                mini=val;
            }
            else
                s.push(val);
        }
        
    }
    
    void pop() {
        if(s.empty())
            return;
     long curr=s.top();
        
        s.pop();
        
        if(curr>mini)
            return ;
        else{
           // int prevMin=mini;
            long temp=(long)2*mini-curr;
            
            mini=temp;
            return ;
        }
        
    }
    
   int top() {
        if(s.empty())
            return -1;
        
      long curr=s.top();
        
        if(curr>mini)
            return curr;
        else
            return mini;
    }
    
   int getMin() {
        if(s.empty())
            return -1;
        return mini;
    }
};

/**
 * Your MinStack object will be instantiated and called as such:
 * MinStack* obj = new MinStack();
 * obj->push(val);
 * obj->pop();
 * int param_3 = obj->top();
 * int param_4 = obj->getMin();
 */
